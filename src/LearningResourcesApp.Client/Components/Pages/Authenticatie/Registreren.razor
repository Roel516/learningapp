@page "/registreren"
@using LearningResourcesApp.Client.Services
@using LearningResourcesApp.Client.Models.Authenticatie
@using LearningResourcesApp.Client.Components.Base
@inherits BaseComponentWithErrorHandling
@inject IAutenticatieService AutenticatieService
@inject NavigationManager Navigatie

<PageTitle>Registreren</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body p-5">
                    <h3 class="mb-4 text-center">Account Aanmaken</h3>

                    <ErrorAlert Message="@foutmelding" OnDismiss="ClearError" />
                    <SuccessAlert Message="@succesmelding" OnDismiss="ClearSuccess" />

                    <EditForm Model="@registerRequest" OnValidSubmit="@HandleRegistreren">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="naam" class="form-label">Naam</label>
                            <InputText id="naam" class="form-control" @bind-Value="registerRequest.Naam" placeholder="Voer je naam in" />
                        </div>

                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <InputText id="email" type="email" class="form-control" @bind-Value="registerRequest.Email" placeholder="voorbeeld@email.com" />
                        </div>

                        <div class="mb-3">
                            <label for="wachtwoord" class="form-label">Wachtwoord</label>
                            <InputText id="wachtwoord" type="password" class="form-control" @bind-Value="registerRequest.Wachtwoord" placeholder="Minimaal 6 tekens" />
                            <small class="text-muted">
                                Wachtwoord moet minimaal 6 tekens lang zijn
                            </small>
                        </div>

                        <div class="mb-3">
                            <label for="wachtwoordBevestiging" class="form-label">Bevestig Wachtwoord</label>
                            <InputText id="wachtwoordBevestiging" type="password" class="form-control" @bind-Value="wachtwoordBevestiging" placeholder="Herhaal je wachtwoord" />
                        </div>

                        <button type="submit" class="btn btn-primary w-100" disabled="@isBezig">
                            @if (isBezig)
                            {
                                <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                <span>Registreren...</span>
                            }
                            else
                            {
                                <span>Registreren</span>
                            }
                        </button>
                    </EditForm>

                    <div class="text-center mt-4">
                        <p class="text-muted">
                            Heb je al een account? <a href="/inloggen" class="text-decoration-none">Log hier in</a>
                        </p>
                    </div>                    
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterRequest registerRequest = new();
    private string wachtwoordBevestiging = string.Empty;

    private async Task HandleRegistreren()
    {
        // Valideer registratie
        var validatieResultaat = ValideerRegistratie();
        if (!validatieResultaat.IsGeldig)
        {
            foutmelding = validatieResultaat.Foutmelding;
            return;
        }

        await ExecuteWithLoadingAsync(async () =>
        {
            var result = await AutenticatieService.Registreren(registerRequest);

            if (result.Succes)
            {
                succesmelding = "Account succesvol aangemaakt! Je wordt doorgestuurd...";
                await Task.Delay(1500); // Korte delay zodat gebruiker de melding ziet
                Navigatie.NavigateTo("/");
            }
            else
            {
                foutmelding = result.Foutmelding ?? "Registratie mislukt";
            }
        }, "Er is een fout opgetreden bij het registreren");
    }

    private ValidationResult ValideerRegistratie()
    {
        // Valideer email
        if (string.IsNullOrWhiteSpace(registerRequest.Email))
        {
            return ValidationResult.Failure("Email is verplicht");
        }

        // Valideer naam
        if (string.IsNullOrWhiteSpace(registerRequest.Naam))
        {
            return ValidationResult.Failure("Naam is verplicht");
        }

        // Valideer wachtwoord lengte
        if (string.IsNullOrEmpty(registerRequest.Wachtwoord) || registerRequest.Wachtwoord.Length < 6)
        {
            return ValidationResult.Failure("Wachtwoord moet minimaal 6 tekens lang zijn");
        }

        // Valideer wachtwoord bevestiging
        if (registerRequest.Wachtwoord != wachtwoordBevestiging)
        {
            return ValidationResult.Failure("De wachtwoorden komen niet overeen");
        }

        return ValidationResult.Success();
    }
}
