@using LearningResourcesApp.Models.Leermiddel

<EditForm Model="@Leermiddel" OnValidSubmit="@OnSubmit">
    @if (!ReadOnly)
    {
        <DataAnnotationsValidator />
        <ValidationSummary />
    }

    <div class="mb-3">
        <label for="titel" class="form-label fw-bold">Titel</label>
        @if (ReadOnly)
        {
            <div class="form-control-plaintext bg-light border rounded p-2">@Leermiddel.Titel</div>
        }
        else
        {
            <InputText id="titel" class="form-control" @bind-Value="Leermiddel.Titel" />
        }
    </div>

    <div class="mb-3">
        <label for="beschrijving" class="form-label fw-bold">Beschrijving</label>
        @if (ReadOnly)
        {
            <div class="form-control-plaintext bg-light border rounded p-2" style="white-space: pre-wrap;">@Leermiddel.Beschrijving</div>
        }
        else
        {
            <InputTextArea id="beschrijving" class="form-control" rows="4" @bind-Value="Leermiddel.Beschrijving" />
        }
    </div>

    <div class="mb-3">
        <label for="link" class="form-label fw-bold">Link (URL)</label>
        @if (ReadOnly)
        {
            <div class="d-flex gap-2 align-items-center">
                <div class="form-control-plaintext bg-light border rounded p-2 flex-grow-1 text-break">
                    @Leermiddel.Link
                </div>
                <a href="@Leermiddel.Link" target="_blank" class="btn btn-primary">
                    <i class="bi bi-box-arrow-up-right"></i> Open
                </a>
            </div>
        }
        else
        {
            <InputText id="link" class="form-control" @bind-Value="Leermiddel.Link" placeholder="https://voorbeeld.nl" />
        }
    </div>

    @if (!ReadOnly)
    {
        <div class="d-flex gap-2">
            <button type="submit" class="btn btn-primary">@SubmitButtonText</button>
            <button type="button" class="btn btn-secondary" @onclick="OnCancel">Annuleren</button>
        </div>
    }
</EditForm>

@code {
    [Parameter]
    public Leermiddel Leermiddel { get; set; } = new();

    [Parameter]
    public string SubmitButtonText { get; set; } = "Opslaan";

    [Parameter]
    public bool ReadOnly { get; set; } = false;

    [Parameter]
    public EventCallback<Leermiddel> OnValidSubmit { get; set; }

    [Parameter]
    public EventCallback OnCancelled { get; set; }

    private async Task OnSubmit()
    {
        await OnValidSubmit.InvokeAsync(Leermiddel);
    }

    private async Task OnCancel()
    {
        await OnCancelled.InvokeAsync();
    }
}
