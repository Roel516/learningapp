@page "/edit-resource/{id:guid}"
@using LearningResourcesApp.Client.Models.Leermiddelen
@using LearningResourcesApp.Client.Services
@using LearningResourcesApp.Client.Components.Base
@inherits BaseComponentWithErrorHandling
@inject ILeermiddelService LeermiddelService
@inject NavigationManager Navigatie

<PageTitle>Leermiddel Bewerken</PageTitle>

<div class="container mt-4">
    <ErrorAlert Message="@foutmelding" OnDismiss="ClearError" />
   
    <h3>Leermiddel Bewerken</h3>

    <LeermiddelForm Leermiddel="@leermiddel"
                    SubmitButtonText="Wijzigingen Opslaan"
                    OnValidSubmit="@VerwerkWijziging"
                    OnCancelled="@Annuleren" />
    
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private Leermiddel? leermiddel;
    private bool heeftFout = false;

    protected override async Task OnInitializedAsync()
    {
        await ExecuteAsync(async () =>
        {
            leermiddel = await LeermiddelService.HaalLeermiddelOpMetId(Id);
            
        }, "Er is een fout opgetreden bij het laden van het leermiddel");       
    }

    private async Task VerwerkWijziging(Leermiddel gewijzigdLeermiddel)
    {
        await ExecuteAsync(async () =>
        {
            if (!string.IsNullOrWhiteSpace(gewijzigdLeermiddel.Titel))
            {
                var succes = await LeermiddelService.WijzigLeermiddel(gewijzigdLeermiddel);
                if (succes)
                {
                    Navigatie.NavigateTo($"/resource/{Id}");
                }
                else
                {
                    foutmelding = "Het wijzigen van het leermiddel is mislukt.";
                }
            }
        }, "Er is een fout opgetreden bij het wijzigen van het leermiddel");
    }

    private void Annuleren()
    {
        Navigatie.NavigateTo($"/resource/{Id}");
    }
}
